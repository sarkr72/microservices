server:
  port: 8080

spring:
  application:
    name: department-service

  datasource:
    url: jdbc:h2:mem:departmentdb;DB_CLOSE_DELAY=-1;MODE=PostgreSQL
    driver-class-name: org.h2.Driver
    username: sa
    password:

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: true

  h2:
    console:
      enabled: true
      path: /h2-console

  cloud:
    stream:
      bindings:
        departmentCreated-out-0:
          destination: department-created
          contentType: application/json
      kafka:
        binder:
          brokers: localhost:9092
          auto-create-topics: true
        producer-properties:
          value.serializer: org.springframework.kafka.support.serializer.JsonSerializer

  sql:
    init:
      mode: never

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
  endpoint:
    health:
      show-details: always

eureka:
  client:
    enabled: true
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true
    hostname: localhost
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 10
    instance-id: ${spring.application.name}:${server.port}

logging:
  level:
    org.springframework: DEBUG
    org.hibernate: DEBUG
    com.department.service: DEBUG
    org.springframework.cloud: TRACE
    com.netflix.eureka: TRACE
    com.netflix.discovery: TRACE
    org.springframework.kafka: TRACE
    org.apache.kafka: TRACE
